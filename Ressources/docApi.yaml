swagger: "2.0"
info:
  title: Simple API overview
  description: Hello
  version: "v1"
# host: www.monapi.dev
paths:
  /users:
    get:
      summary: retrive all users
      tags:
        - Users
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: add a user
      tags:
        - Users
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/UserAndToken'
          description: all user infos
      responses:
        201 :
          description : CREATED
          schema:
            $ref: '#/definitions/User'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
  /users/{userID}:
    get:
      summary: retrive single user
      tags:
        - Users
      parameters:
        - in: path
          name: userID
          required: true
          type: string
          description: uuid of user you want to retrive
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200 :
          description : OK
          schema:
            $ref: '#/definitions/User'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    put:
      summary: update a user
      tags:
        - Users
      parameters:
        - in: path
          name: userID
          required: true
          type: string
          description: uuid of user you want to update
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/UserAndToken'
          description: all new user infos
      responses:
        202 :
          description : ACCEPTED
          schema:
            $ref: '#/definitions/User'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete a users
      tags:
        - Users
      parameters: 
        - in: path
          name: userID
          required: true
          type: string
          description: uuid of user you want to delete
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /users/connect/{userID}:
    get:
      summary: connect a user
      tags: 
        - Users
      parameters: 
        - in: path
          name: userID
          required: true
          type: string
          description: uuid of user you want to connect
      responses:
        202:
          description: accepted
          schema: 
            $ref: '#/definitions/UUID'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Errors
  /users/disconnect:
    post:
      summary: disconnect a user
      tags:
        - Users
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
          description: token of the connected user you want to disconnect
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Errors
  /events:
    get:
      summary: retrive all events
      tags:
        - Events
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: add an Event
      tags:
        - Events
      parameters:
        - in: body
          name: event
          required: true
          schema:
            $ref: '#/definitions/EventAndToken'
          description: all event infos
      responses:
        201 :
          description : CREATED
          schema:
            $ref: '#/definitions/Event'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
  /events/{eventID}:
    get:
      summary: retrive single event
      tags:
        - Events
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: eventID
          required: true
          type: string
          description: uuid of event you want to retrive
      responses:
        200 :
          description : OK
          schema:
            $ref: '#/definitions/Event'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    put:
      summary: update an event
      tags:
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          type: string
          description: uuid of event you want to update
        - in: body
          name: event
          required: true
          schema:
            $ref: '#/definitions/EventAndToken'
          description: all new event infos
      responses:
        202 :
          description : ACCEPTED
          schema:
            $ref: '#/definitions/Event'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete an event
      tags:
        - Events
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: eventID
          required: true
          type: string
          description: uuid of event you want to delete
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /events/users/{eventID}:
    put:
      summary: add one user to an event
      tags: 
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          type: string
          description: uuid of event you want to add user on
        - in: body
          name: token and userID
          required: false
          schema:
            $ref: '#/definitions/TokenAndUserID'
          description: token of current user and uuid of user to add
      responses:
        202:
          description: accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete one user from an event
      tags: 
        - Events
      parameters:
        - in: path
          name: eventID
          required: true
          type: string
          description: uuid of event you want to delete user from
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
          description: token of current user
      responses:
        202:
          description: accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/Idea'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /promos:
    get:
      summary: retrive all promos
      tags:
        - Promos
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Promo'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: add a Promo
      tags:
        - Promos
      parameters:
        - in: body
          name: promo
          required: true
          schema:
            $ref: '#/definitions/PromoAndToken'
          description: all promo infos
      responses:
        201 :
          description : CREATED
          schema:
            $ref: '#/definitions/Promo'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
  /promos/{promoID}:
    get:
      summary: retrive single promo
      tags:
        - Promos
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: promoID
          required: true
          type: string
          description: uuid of promo you want to retrive
      responses:
        200 :
          description : OK
          schema:
            $ref: '#/definitions/Promo'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    put:
      summary: update a promo
      tags:
        - Promos
      parameters:
        - in: path
          name: promoID
          required: true
          type: string
          description: uuid of promo you want to update
        - in: body
          name: promo
          required: true
          schema:
            $ref: '#/definitions/PromoAndToken'
          description: all new promo infos
      responses:
        202 :
          description : ACCEPTED
          schema:
            $ref: '#/definitions/Promo'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete a promo
      tags:
        - Promos
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: promoID
          required: true
          type: string
          description: uuid of promo you want to delete
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /ideas:
    get:
      summary: retrive all ideas
      tags:
        - Ideas
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Idea'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: add an Idea
      tags:
        - Ideas
      parameters:
        - in: body
          name: event
          required: true
          schema:
            $ref: '#/definitions/IdeaAndToken'
          description: all idea infos
      responses:
        201 :
          description : CREATED
          schema:
            $ref: '#/definitions/Idea'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
  /ideas/{ideaID}:
    get:
      summary: retrive single idea
      tags:
        - Ideas
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: ideaID   # Note the name is the same as in the path
          required: true
          type: string
          description: uuid of idea you want to retrive
      responses:
        200 :
          description : OK
          schema:
            $ref: '#/definitions/Idea'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    put:
      summary: update an idea
      tags:
        - Ideas
      parameters:
        - in: path
          name: ideaID
          required: true
          type: string
          description: uuid of idea you want to update
        - in: body
          name: idea
          required: true
          schema:
            $ref: '#/definitions/IdeaAndToken'
          description: all new idea infos
      responses:
        202 :
          description : ACCEPTED
          schema:
            $ref: '#/definitions/Idea'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete an idea
      tags:
        - Ideas
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: ideaID
          required: true
          type: string
          description: uuid of idea you want to delete
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /ideas/users/{ideaID}:
    put:
      summary: add one user to an idea
      tags: 
        - Ideas
      parameters:
        - in: path
          name: ideaID
          required: true
          type: string
          description: uuid of idea you want to add user on
        - in: body
          name: token and userID
          required: false
          schema:
            $ref: '#/definitions/TokenAndUserID'
          description: token of current user and uuid of user to add
      responses:
        202:
          description: accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/Idea'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete one user from an idea
      tags: 
        - Ideas
      parameters:
        - in: path
          name: ideaID
          required: true
          type: string
          description: uuid of idea you want to delete user from
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
          description: token of current user
      responses:
        202:
          description: accepted
          schema:
            type: array
            items:
              $ref: '#/definitions/Idea'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /reviews:
    get:
      summary: retrive all reviews
      tags:
        - Reviews
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: add a review
      tags:
        - Reviews
      parameters:
        - in: body
          name: review
          required: true
          schema:
            $ref: '#/definitions/ReviewAndToken'
          description: all event infos
      responses:
        201 :
          description : CREATED
          schema:
            $ref: '#/definitions/Review'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
  /reviews/{reviewID}:
    get:
      summary: retrive single review
      tags:
        - Reviews
      parameters:
        - in: body
          name: token
          required: false
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: reviewID   # Note the name is the same as in the path
          required: true
          type: string
          description: uuid of review you want to retrive
      responses:
        200 :
          description : OK
          schema:
            $ref: '#/definitions/Review'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    put:
      summary: update a review
      tags:
        - Reviews
      parameters:
        - in: path
          name: reviewID
          required: true
          type: string
          description: uuid of review you want to update
        - in: body
          name: idea
          required: true
          schema:
            $ref: '#/definitions/ReviewAndToken'
          description: all new review infos
      responses:
        202 :
          description : ACCEPTED
          schema:
            $ref: '#/definitions/Review'
        204 :
          description : No Content
        400 :
          description: Bad Request
        401 :
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
      summary: delete a review
      tags:
        - Reviews
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
        - in: path
          name: reviewID
          required: true
          type: string
          description: uuid of review you want to delete
      responses:
        200:
          description: OK
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /reviews/user:
    get:
      summary: get all reviews for current user
      tags:
        - Reviews
      parameters:
        - in: body
          name: token
          required: true
          schema:
            $ref: '#/definitions/UUID'
          description: token of current user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
        204:
          description: No Content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
definitions:
  User:
    type: object
    properties:
      id: 
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      firstName: 
        type: string
        example: Roger
      name: 
        type: string
        example: Duchamp
      birthD: 
        type: string
        example: '12/12/1212'
      alias: 
        type: string
        example: Roger's
      promo:
          type: string
          example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      mail :
        type: string
        example: prenom.nom@imie.fr
      isAdmin :
        type: boolean
        example: false
  UserAndToken:
    type: object
    properties:
      id: 
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      firstName: 
        type: string
        example: Roger
      name: 
        type: string
        example: Duchamp
      birthD: 
        type: string
        example: '12/12/1212'
      alias: 
        type: string
        example: Roger's
      promo:
          type: string
          example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      mail :
        type: string
        example: prenom.nom@imie.fr
      isAdmin :
        type: boolean
        example: false
      token:
        $ref: '#/definitions/UUID'
  Promo:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      name:
        type: string
        example: Dev-A2
      alias:
        type: string
        example: Autistart+
  PromoAndToken:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      name:
        type: string
        example: Dev-A2
      alias:
        type: string
        example: Autistart+
      token:
        $ref: '#/definitions/UUID'
  Event:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: Jour de l'an
      dateTime:
        type: string
        example: "01/01/2019"
      createDateTime:
        type: string
        example: '01/12/2018'
      users:
        type: array
        items:
          type: object
          properties:
            user:
              type: string
              example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
            joinDateTime :
              type: string
              example: "11/12/2018 11:11:00"
  EventAndToken:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: Jour de l'an
      dateTime:
        type: string
        example: "01/01/2019"
      createDateTime:
        type: string
        example: '01/12/2018'
      users:
        type: array
        items:
          type: object
          properties:
            user:
              type: string
              example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
            joinDateTime :
              type: string
              example: "11/12/2018 11:11:00"
      token:
        $ref: '#/definitions/UUID'
  Idea:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: "Mon idée1"
      text:
        type: string
        example: "Blablabla Blablabla Blablabla"
      dateTime:
        type: string
        example: "9/12/2018 11:11:02"
      user:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
  IdeaAndToken:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: "Mon idée1"
      text:
        type: string
        example: "Blablabla Blablabla Blablabla"
      dateTime:
        type: string
        example: "9/12/2018 11:11:02"
      user:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      token:
        $ref: '#/definitions/UUID'
  Review:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: Module API
      dateTime:
        type: string
        example: "11/12/2018 11:11:00"
      adress:
        type: string
        example: http://www.google.com/
      promo:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
  ReviewAndToken:
    type: object
    properties:
      id:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      title:
        type: string
        example: Module API
      dateTime:
        type: string
        example: "11/12/2018 11:11:00"
      adress:
        type: string
        example: http://www.google.com/
      promo:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      token:
        $ref: '#/definitions/UUID'
  UUID:
    type: string
    example: "cede2d61-84d4-48ea-a6b6-bf9d1cfb354f"
  TokenAndUserID:
    type: object
    properties:
      userID:
        type: string
        example: "3651ac54-d393-495b-b2ae-a26616de3fc4"
      token:
        type: string
        example: "cede2d61-84d4-48ea-a6b6-bf9d1cfb354f"
tags:
  - name: Users
    description: Everything about users
  - name: Events
    description: Everything about events
  - name: Promos
    description: Everything about promos
  - name: Ideas
    description: Everything about ideas
  - name: Reviews
    description: Everything about reviews
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /AnaelBM/testApi/v1
schemes:
 - https